@page "/AddBots"
@inject IBotService BotService
@inject NavigationManager NavigationManager

<div class="popup @(isShowModal?"":"popup_none")">
    <div class="popup_body">
        <div class="popup_content">
            <a @onclick="CloseModal" class="popup_close">
                <img src="/Images/icons/close.svg">
            </a>
            <buttom class="telegram_buttom">
                <img src="/Images/icons/telegramBottom.svg"/>
            </buttom>
            <div class="text_block">
                <h2> Create Connection Channel</h2>
                <p>Fill all the fields below to create connection channel </p>
            </div>
            <div class="common_block">
             
                       <div class="input_file">
                    <label for="fileinput" class="label_file">
                        <img src="/Images/icons/upload.svg" />
                        <span></span>
                    </label>
                </div>
              <div class="input_block">
                 <div>
                  <p>Name </p>
                  <input  type="text" placeholder="Bot announcing name" />
                  </div>
                   <p> Bot Username</p>
                  <input type="text" placeholder="TimeBot" />
              </div>
                </div>
              <div class="Bot_Token">
                     <p> Bot Token</p>
                  <input type="text" />
              </div>
          
        </div>
    </div>
</div>

@code {

    [Parameter]
    public bool isShowModal { get; set; }

    [Parameter]
    public EventCallback OnClickCallback { get; set; }

    public Domain.Models.Bot bot = new Domain.Models.Bot();
    protected async void CreateBot()
    {
        BotService.Create(bot);
        NavigationManager.NavigateTo("bots");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("bots");
    }

    public void CloseModal()
    {
        OnClickCallback.InvokeAsync();
    }
}