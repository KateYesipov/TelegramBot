@inject IBotService BotService
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand @styleArrowButton" @onclick="ShowOrHideLeftTab"></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>
<div class="@styleHideMenu @NavMenuCssClass">
    <div class="menu_block" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div>
                <a> <div class="dashboard"></div></a>
                <a> <div class="hug_hug"></div></a>
                <a> <div class="trade"></div></a>
                <a> <div class="chat"></div> </a>
                <a> <div class="big_box"></div></a>
            </div>
        </nav>
    </div>

    <div class="folders_block">
        <nav class="flex-column">
            @foreach (var item in Bots)
            {
                <div>
                    <a @onclick="(()=>Redirect(item.UserName))"><div class="folder_img"></div></a>
                    <div class="folder_text">@item.Name</div>
                </div>
            }
            <div>
                <a href="/bots"><div class="plus_img"></div></a>
            </div>
        </nav>
    </div>
</div>

@code {
    private List<Domain.Models.Bot> Bots = new List<Domain.Models.Bot>();

    //style class
    public string styleHideMenu = "";
    public string styleArrowButton = "";


    protected override async Task OnInitializedAsync()
    {
        Bots = BotService.GetAll();
    }

    private void Redirect(string value)
    {
        NavigationManager.NavigateTo("/chat/" + value, true);
    }



    private void ShowOrHideLeftTab()
    {
        if (styleHideMenu == String.Empty && styleArrowButton == String.Empty)
        {
            styleHideMenu = "hide_menu";
            styleArrowButton = "arrow-left";
        }
        else
        {
            styleHideMenu = "";
            styleArrowButton = "";
        }
    }



    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
