// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramChatBlazor.DAL.Context;

#nullable disable

namespace TelegramChatBlazor.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220706092404_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Bot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bots");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(2771),
                            Name = "Jironimo",
                            Token = "5536982597:AAHGE_tYhVLViVvUzlnFpelX7aSv0H4kbp8",
                            UserName = "JironimoBot"
                        },
                        new
                        {
                            Id = 2L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(2853),
                            Name = "TelegramBotBlazor",
                            Token = "5493821109:AAGpCZCpURP2dn1yM_wEdAQCdA21avI5ggM",
                            UserName = "TelegramBotBlazorBot"
                        });
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BotAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BotId")
                        .HasColumnType("bigint");

                    b.Property<string>("BotUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelegramChatId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ColorHex = "#FFFFFF"
                        },
                        new
                        {
                            Id = 2L,
                            ColorHex = "#3C95FF"
                        },
                        new
                        {
                            Id = 3L,
                            ColorHex = "#FFCE31"
                        },
                        new
                        {
                            Id = 4L,
                            ColorHex = "#25CC62"
                        },
                        new
                        {
                            Id = 5L,
                            ColorHex = "#ED4C5C"
                        },
                        new
                        {
                            Id = 6L,
                            ColorHex = "#9C4CED"
                        },
                        new
                        {
                            Id = 7L,
                            ColorHex = "#4CEDED"
                        },
                        new
                        {
                            Id = 8L,
                            ColorHex = "#ED4CB6"
                        });
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Manager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastOnline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3023),
                            Email = "testEmail@gmail.com",
                            ImgPath = "https://ps.w.org/user-avatar-reloaded/assets/icon-256x256.png?rev=2540745",
                            LastOnline = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3032),
                            Name = "Alex Yesipov"
                        },
                        new
                        {
                            Id = 2L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3071),
                            Email = "testEmail2@gmail.com",
                            ImgPath = "https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes.png",
                            LastOnline = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3078),
                            Name = "Alex Ivanov"
                        },
                        new
                        {
                            Id = 3L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3110),
                            Email = "testEmail3@gmail.com",
                            ImgPath = "https://www.kindpng.com/picc/m/163-1636340_user-avatar-icon-avatar-transparent-user-icon-png.png",
                            LastOnline = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3112),
                            Name = "Kate Yesipova"
                        },
                        new
                        {
                            Id = 4L,
                            CreateAt = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3125),
                            Email = "testEmail4@gmail.com",
                            ImgPath = "https://image.pngaaa.com/345/1582345-middle.png",
                            LastOnline = new DateTime(2022, 7, 6, 12, 24, 4, 250, DateTimeKind.Local).AddTicks(3132),
                            Name = "Alex Pupkin"
                        });
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Message", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPartner")
                        .HasColumnType("bit");

                    b.Property<long?>("MessageGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Answer", b =>
                {
                    b.HasOne("TelegramChatBlazor.DAL.Entities.Category", "Category")
                        .WithMany("Answers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Chat", b =>
                {
                    b.HasOne("TelegramChatBlazor.DAL.Entities.Bot", "Bot")
                        .WithMany("Chats")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Message", b =>
                {
                    b.HasOne("TelegramChatBlazor.DAL.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Bot", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Category", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("TelegramChatBlazor.DAL.Entities.Chat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
